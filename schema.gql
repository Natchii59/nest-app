# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

interface Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  firstName: String
  lastName: String
  username: String!
  bio: String
}

type Post {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String
  author: User
}

type PostGetOutput {
  post: Post!
}

type PostPagination {
  totalCount: Int!
  nodes: [Post!]!
}

type JWTPayload {
  id: ID!
  email: String!
  username: String!
}

type PostCreateOuput {
  post: Post!
}

type PostDeleteOutput {
  id: ID
}

type PostUpdateOutput {
  post: Post!
}

type UserGetOutput {
  user: User!
}

type UserPagination {
  totalCount: Int!
  nodes: [User!]!
}

type UserCreateOutput {
  user: User!
}

type UserDeleteOutput {
  id: ID
}

type UserUpdateOutput {
  user: User!
}

type AuthLoginOutput {
  accessToken: String!
}

type Query {
  getPostById(id: ID!): PostGetOutput!
  postPagination(skip: Int!, take: Int!, sortBy: PostPaginationSortBy, where: PostPaginationWhere): PostPagination!
  userGetById(id: ID!): UserGetOutput!
  userPagination(skip: Int!, take: Int!, sortBy: UserPaginationSortBy, where: UserPaginationWhere): UserPagination!
  getProfile: JWTPayload!
}

input PostPaginationSortBy {
  createdAt: SortDirection
  title: SortDirection
}

enum SortDirection {
  ASC
  DESC
}

input PostPaginationWhere {
  title: String
}

input UserPaginationSortBy {
  createdAt: SortDirection
  username: SortDirection
  firstName: SortDirection
  lastName: SortDirection
}

input UserPaginationWhere {
  username: String
  firstName: String
  lastName: String
}

type Mutation {
  createPost(input: PostCreateInput!): PostCreateOuput!
  updatePost(id: ID!, input: PostUpdateInput!): PostUpdateOutput!
  deletePost(id: ID!): PostDeleteOutput!
  createUser(input: UserCreateInput!): UserCreateOutput!
  updateUser(id: ID!, input: UserUpdateInput!): UserUpdateOutput!
  deleteUser(id: ID!): UserDeleteOutput!
  authLogin(email: String!, password: String!): AuthLoginOutput!
}

input PostCreateInput {
  title: String!
  description: String
}

input PostUpdateInput {
  title: String
  description: String
}

input UserCreateInput {
  email: String!
  firstName: String
  lastName: String
  username: String!
  password: String!
}

input UserUpdateInput {
  email: String
  firstName: String
  lastName: String
  username: String
  bio: String
}